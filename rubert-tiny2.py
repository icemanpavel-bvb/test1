import streamlit as st
from transformers import pipeline

st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π", page_icon="üòä")
st.title("üòä –ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞")


@st.cache_resource
def load_model():
    return pipeline("text-classification",
                    model="cointegrated/rubert-tiny2-cedr-emotion-detection")

with st.spinner("–ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å —ç–º–æ—Ü–∏–π..."):
    classifier = load_model()

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
text = st.text_area(
    "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–∏:",
    placeholder="–≤–æ—Ç —Å—é–¥–∞ –ø–∏—à–∏(—Ç–µ)",
    height=100
)

if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", type="primary"):
    if text.strip():
        with st.spinner("–†–∞–±–æ—Ç–∞–µ–º..."):
            result = classifier(text)[0]

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        emotion = result['label']
        confidence = result['score']

        st.success("–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:")

        col1, col2 = st.columns(2)
        with col1:
            st.metric("üìä –≠–º–æ—Ü–∏—è", emotion)
        with col2:
            st.metric("üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å", f"{confidence:.1%}")

        st.progress(float(confidence), text=f"–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.1%}")

    else:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")